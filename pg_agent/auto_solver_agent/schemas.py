from typing import TypedDict, Dict, Any, Optional

class SolverState(TypedDict):
    """
    Represents the state of the auto-solver agent.
    """
    # --- Inputs for the validation ---
    problem_statement: str
    num_test_generations: int
    max_iterations: int
    run_id: str  # <-- ADD THIS LINE for a unique run identifier

    # --- Code generated by initial nodes ---
    bruteforce_code: Optional[str]
    test_generator_code: Optional[str]
    solution_code: Optional[str]

    # --- State for the refinement loop ---
    # The path to the test cases is now part of the state
    test_cases_dir_path: Optional[str]
    test_results: Optional[Dict[str, Any]]
    iteration_count: int

    # --- Final output ---
    final_verdict: str